version: "3.8"

services:
  mariadb-bikes:
    image: "mariadb:latest"
    container_name: "mariadb-bikes"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: bikes
    volumes:
      - "./server/mariadb/:/docker-entrypoint-initdb.d/"
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized"]
      start_period: 15s
      interval: 15s
      timeout: 10s
      retries: 5
    restart: "always"
    command: "--init-file /docker-entrypoint-initdb.d/setup-bikes.sql"

  mariadb-test:
    image: "mariadb:latest"
    container_name: "mariadb-test"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: test
    volumes:
      - "./server/mariadb/:/docker-entrypoint-initdb.d/"
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized"]
      start_period: 15s
      interval: 15s
      timeout: 10s
      retries: 5
    restart: "always"
    command: "--init-file /docker-entrypoint-initdb.d/setup-test.sql"

  server:
    build:
      context: "./server/"
      dockerfile: "./server/Dockerfile"
    container_name: "server"
    environment:
      DB_HOST: ${DB_SERVICE_NAME}
      DB_TEST_HOST: ${TEST_SERVICE_NAME}
      DB_PORT: "3306"
      DB_USER: "root"
      DB_PASSWORD: ${DB_ROOT_PASSWORD}
      DB_DATABASE: ${DB_NAME}
      TEST_DATABASE: ${TEST_DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
    volumes:
      - ./server/server/package.json:/server/package.json
      - ./server/server/package-lock.json:/server/package-lock.json
      - ./server/server/mocha.json:/server/mocha.json
      - ./server/server/app.js:/server/app.js
      - ./server/server/routes/:/server/routes/
      - ./server/server/test/:/server/test/
      - ./server/server/src/:/server/src/
      - ./server/server/.eslintignore:/server/.eslintignore
      - ./server/server/.eslintrc.json:/server/.eslintrc.json
      - ./server/server/.prettierignore:/server/.prettierignore
    ports:
      - "1337:1337"
    depends_on:
      mariadb-bikes:
        condition: service_healthy
      mariadb-test:
        condition: service_healthy
    restart: "always"

  python:
    container_name: "bike-python"
    build: "./bike-brain"
    working_dir: "/bike/app"
    volumes:
      - "./bike-brain/app/:/bike/app"
    links:
      - "server:express-server"
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - API_URL=${PYTHON_API_URL}
      - PYTEST_ADDOPTS=-p no:cacheprovider
    command: python app.py
    depends_on:
      - server
    restart: "always"

  admin-web-service:
    container_name: "admin-web-container"
    # image: admin-web-image
    build:
      context: "./admin-web-client/"
      dockerfile: "./Dockerfile"
    environment:
      # Explicitly tell SvelteKit where the app is being served
      # to avoid the "Cross-site POST form submissions are forbidden" error
      # when using form actions with the node adapter
      - ORIGIN=http://localhost:3000
    depends_on:
      - server
    restart: always
    ports:
      - 3000:3000
